// This file is automatically generated. DO NOT EDIT.

package aixm

import "time"

type AIXMBasicMessage struct {
	BoundedBy       BoundedBy       `xml:"boundedBy"`
	HasMember       []HasMember     `xml:"hasMember"`
	Identifier      Identifier      `xml:"identifier"`
	MessageMetadata MessageMetadata `xml:"messageMetadata"`
}

type ARP struct {
	ElevatedPoint ElevatedPoint `xml:"ElevatedPoint"`
}

type Abstract struct {
	CharacterString string `xml:"CharacterString"`
}

type Address struct {
	CIAddress CIAddress `xml:"CI_Address"`
}

type AirportHeliport struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type AirportHeliportResponsibilityOrganisation struct {
	ID                       string                   `xml:"id,attr"`
	TheOrganisationAuthority TheOrganisationAuthority `xml:"theOrganisationAuthority"`
}

type AirportHeliportTimeSlice struct {
	ID                          string                      `xml:"id,attr"`
	ARP                         ARP                         `xml:"ARP"`
	Abandoned                   *string                     `xml:"abandoned"`
	Annotation                  []Annotation                `xml:"annotation"`
	CertificationDate           CertificationDate           `xml:"certificationDate"`
	CertificationExpirationDate CertificationExpirationDate `xml:"certificationExpirationDate"`
	CertifiedICAO               CertifiedICAO               `xml:"certifiedICAO"`
	ControlType                 ControlType                 `xml:"controlType"`
	CorrectionNumber            bool                        `xml:"correctionNumber"`
	DateMagneticVariation       *int                        `xml:"dateMagneticVariation"`
	Designator                  Designator                  `xml:"designator"`
	DesignatorIATA              *string                     `xml:"designatorIATA"`
	FieldElevation              *FieldElevation             `xml:"fieldElevation"`
	FieldElevationAccuracy      FieldElevationAccuracy      `xml:"fieldElevationAccuracy"`
	Interpretation              string                      `xml:"interpretation"`
	LocationIndicatorICAO       *string                     `xml:"locationIndicatorICAO"`
	MagneticVariation           *float64                    `xml:"magneticVariation"`
	MagneticVariationAccuracy   MagneticVariationAccuracy   `xml:"magneticVariationAccuracy"`
	MagneticVariationChange     MagneticVariationChange     `xml:"magneticVariationChange"`
	Name                        string                      `xml:"name"`
	PrivateUse                  *string                     `xml:"privateUse"`
	ReferenceTemperature        *ReferenceTemperature       `xml:"referenceTemperature"`
	ResponsibleOrganisation     ResponsibleOrganisation     `xml:"responsibleOrganisation"`
	SequenceNumber              string                      `xml:"sequenceNumber"`
	ServedCity                  *ServedCity                 `xml:"servedCity"`
	TransitionAltitude          *TransitionAltitude         `xml:"transitionAltitude"`
	Type                        Type                        `xml:"type"`
	ValidTime                   ValidTime                   `xml:"validTime"`
}

type Airspace struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type AirspaceGeometryComponent struct {
	ID                string            `xml:"id,attr"`
	TheAirspaceVolume TheAirspaceVolume `xml:"theAirspaceVolume"`
}

type AirspaceLayer struct {
	ID                  string     `xml:"id,attr"`
	LowerLimit          LowerLimit `xml:"lowerLimit"`
	LowerLimitReference string     `xml:"lowerLimitReference"`
	UpperLimit          UpperLimit `xml:"upperLimit"`
	UpperLimitReference string     `xml:"upperLimitReference"`
}

type AirspaceLayerClass struct {
	ID               string           `xml:"id,attr"`
	AssociatedLevels AssociatedLevels `xml:"associatedLevels"`
	Classification   *string          `xml:"classification"`
}

type AirspaceTimeSlice struct {
	ID                string            `xml:"id,attr"`
	Class             Class             `xml:"class"`
	CorrectionNumber  bool              `xml:"correctionNumber"`
	Designator        Designator        `xml:"designator"`
	DesignatorICAO    string            `xml:"designatorICAO"`
	GeometryComponent GeometryComponent `xml:"geometryComponent"`
	Interpretation    string            `xml:"interpretation"`
	LocalType         *string           `xml:"localType"`
	Name              string            `xml:"name"`
	SequenceNumber    string            `xml:"sequenceNumber"`
	Type              Type              `xml:"type"`
	ValidTime         ValidTime         `xml:"validTime"`
}

type AirspaceVolume struct {
	ID                    string               `xml:"id,attr"`
	HorizontalProjection  HorizontalProjection `xml:"horizontalProjection"`
	LowerLimit            LowerLimit           `xml:"lowerLimit"`
	LowerLimitReference   string               `xml:"lowerLimitReference"`
	MaximumLimit          *MaximumLimit        `xml:"maximumLimit"`
	MaximumLimitReference *string              `xml:"maximumLimitReference"`
	MinimumLimit          *MinimumLimit        `xml:"minimumLimit"`
	MinimumLimitReference *string              `xml:"minimumLimitReference"`
	UpperLimit            UpperLimit           `xml:"upperLimit"`
	UpperLimitReference   string               `xml:"upperLimitReference"`
}

type Annotation struct {
	Note Note `xml:"Note"`
}

type ArcByCenterPoint struct {
	Interpolation string     `xml:"interpolation,attr"`
	NumArc        bool       `xml:"numArc,attr"`
	EndAngle      EndAngle   `xml:"endAngle"`
	PosList       PosList    `xml:"posList"`
	Radius        Radius     `xml:"radius"`
	StartAngle    StartAngle `xml:"startAngle"`
}

type AssociatedAirportHeliport struct {
	Href string `xml:"href,attr"`
}

type AssociatedDeclaredDistance struct {
	RunwayDeclaredDistance RunwayDeclaredDistance `xml:"RunwayDeclaredDistance"`
}

type AssociatedLevels struct {
	AirspaceLayer AirspaceLayer `xml:"AirspaceLayer"`
}

type Authority struct {
	AuthorityForNavaidEquipment AuthorityForNavaidEquipment `xml:"AuthorityForNavaidEquipment"`
}

type AuthorityForNavaidEquipment struct {
	ID                       string                   `xml:"id,attr"`
	TheOrganisationAuthority TheOrganisationAuthority `xml:"theOrganisationAuthority"`
}

type Availability struct {
	NavaidOperationalStatus NavaidOperationalStatus `xml:"NavaidOperationalStatus"`
}

type BeginPosition struct {
	IndeterminatePosition *string `xml:"indeterminatePosition,attr"`
	CharData              string  `xml:",chardata"`
}

type Border struct {
	Curve Curve `xml:"Curve"`
}

type BoundedBy struct {
	Envelope Envelope `xml:"Envelope"`
}

type CIAddress struct {
	ElectronicMailAddress ElectronicMailAddress `xml:"electronicMailAddress"`
}

type CICitation struct {
	Date  []Date `xml:"date"`
	Title Title  `xml:"title"`
}

type CIContact struct {
	Address Address `xml:"address"`
}

type CIDate struct {
	Date     Date     `xml:"date"`
	DateType DateType `xml:"dateType"`
}

type CIDateTypeCode struct {
	CodeList      string `xml:"codeList,attr"`
	CodeListValue string `xml:"codeListValue,attr"`
}

type CIResponsibleParty struct {
	ContactInfo      ContactInfo      `xml:"contactInfo"`
	OrganisationName OrganisationName `xml:"organisationName"`
	Role             Role             `xml:"role"`
}

type CIRoleCode struct {
	CodeList      string `xml:"codeList,attr"`
	CodeListValue string `xml:"codeListValue,attr"`
}

type CertificationDate struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
}

type CertificationExpirationDate struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
}

type CertifiedICAO struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
}

type CircleByCenterPoint struct {
	Interpolation string  `xml:"interpolation,attr"`
	NumArc        bool    `xml:"numArc,attr"`
	PosList       PosList `xml:"posList"`
	Radius        Radius  `xml:"radius"`
}

type Citation struct {
	CICitation CICitation `xml:"CI_Citation"`
}

type City struct {
	ID   string `xml:"id,attr"`
	Name string `xml:"name"`
}

type Class struct {
	CharData           string              `xml:",chardata"`
	AirspaceLayerClass *AirspaceLayerClass `xml:"AirspaceLayerClass"`
}

type Code struct {
	CharacterString string `xml:"CharacterString"`
}

type ConstructionStatus struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type Contact struct {
	NilReason string `xml:"nilReason,attr"`
}

type ContactInfo struct {
	CIContact CIContact `xml:"CI_Contact"`
}

type ControlType struct {
	Nil       *bool   `xml:"nil,attr"`
	NilReason *string `xml:"nilReason,attr"`
	CharData  string  `xml:",chardata"`
}

type Curve struct {
	ID       string   `xml:"id,attr"`
	SrsName  *string  `xml:"srsName,attr"`
	Segments Segments `xml:"segments"`
}

type CurveMember struct {
	Href  *string `xml:"href,attr"`
	Title *string `xml:"title,attr"`
	Curve *Curve  `xml:"Curve"`
}

type DME struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type DMETimeSlice struct {
	ID               string          `xml:"id,attr"`
	Authority        Authority       `xml:"authority"`
	Channel          *string         `xml:"channel"`
	CorrectionNumber bool            `xml:"correctionNumber"`
	Designator       Designator      `xml:"designator"`
	GhostFrequency   *GhostFrequency `xml:"ghostFrequency"`
	Interpretation   string          `xml:"interpretation"`
	Location         Location        `xml:"location"`
	Name             *string         `xml:"name"`
	SequenceNumber   string          `xml:"sequenceNumber"`
	Type             *Type           `xml:"type"`
	ValidTime        ValidTime       `xml:"validTime"`
}

type DataSetURI struct {
	CharacterString string `xml:"CharacterString"`
}

type Date struct {
	CIDate   *CIDate    `xml:"CI_Date"`
	DateTime *time.Time `xml:"DateTime"`
}

type DateStamp struct {
	NilReason string `xml:"nilReason,attr"`
}

type DateType struct {
	CIDateTypeCode CIDateTypeCode `xml:"CI_DateTypeCode"`
}

type DeclaredValue struct {
	RunwayDeclaredDistanceValue RunwayDeclaredDistanceValue `xml:"RunwayDeclaredDistanceValue"`
}

type DesignatedPoint struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type DesignatedPointTimeSlice struct {
	ID               string     `xml:"id,attr"`
	CorrectionNumber bool       `xml:"correctionNumber"`
	Designator       Designator `xml:"designator"`
	Interpretation   string     `xml:"interpretation"`
	Location         Location   `xml:"location"`
	Name             *string    `xml:"name"`
	SequenceNumber   string     `xml:"sequenceNumber"`
	Type             Type       `xml:"type"`
	ValidTime        ValidTime  `xml:"validTime"`
}

type Designator struct {
	Nil      bool   `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type Distance struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type DistanceAccuracy struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type EXExtent struct {
	GeographicElement GeographicElement `xml:"geographicElement"`
	TemporalElement   *TemporalElement  `xml:"temporalElement"`
}

type EXGeographicDescription struct {
	GeographicIdentifier GeographicIdentifier `xml:"geographicIdentifier"`
}

type EXTemporalExtent struct {
	Extent Extent `xml:"extent"`
}

type ElectronicMailAddress struct {
	CharacterString string `xml:"CharacterString"`
}

type ElevatedCurve struct {
	ID                 string             `xml:"id,attr"`
	SrsName            string             `xml:"srsName,attr"`
	Elevation          Elevation          `xml:"elevation"`
	GeoidUndulation    GeoidUndulation    `xml:"geoidUndulation"`
	HorizontalAccuracy HorizontalAccuracy `xml:"horizontalAccuracy"`
	Segments           Segments           `xml:"segments"`
	VerticalAccuracy   VerticalAccuracy   `xml:"verticalAccuracy"`
	VerticalDatum      string             `xml:"verticalDatum"`
}

type ElevatedPoint struct {
	ID                 string             `xml:"id,attr"`
	SrsName            string             `xml:"srsName,attr"`
	Annotation         *Annotation        `xml:"annotation"`
	Elevation          *Elevation         `xml:"elevation"`
	GeoidUndulation    *GeoidUndulation   `xml:"geoidUndulation"`
	HorizontalAccuracy HorizontalAccuracy `xml:"horizontalAccuracy"`
	Pos                string             `xml:"pos"`
	VerticalAccuracy   *VerticalAccuracy  `xml:"verticalAccuracy"`
	VerticalDatum      string             `xml:"verticalDatum"`
}

type ElevatedSurface struct {
	ID                 string             `xml:"id,attr"`
	SrsName            string             `xml:"srsName,attr"`
	Elevation          Elevation          `xml:"elevation"`
	GeoidUndulation    GeoidUndulation    `xml:"geoidUndulation"`
	HorizontalAccuracy HorizontalAccuracy `xml:"horizontalAccuracy"`
	Patches            Patches            `xml:"patches"`
	VerticalAccuracy   VerticalAccuracy   `xml:"verticalAccuracy"`
	VerticalDatum      string             `xml:"verticalDatum"`
}

type Elevation struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type ElevationTDZ struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type ElevationTDZAccuracy struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
}

type EndAngle struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type EndPosition struct {
	IndeterminatePosition *string `xml:"indeterminatePosition,attr"`
	CharData              string  `xml:",chardata"`
}

type Envelope struct {
	SrsName     string `xml:"srsName,attr"`
	LowerCorner string `xml:"lowerCorner"`
	UpperCorner string `xml:"upperCorner"`
}

type Extent struct {
	EXExtent   *EXExtent   `xml:"EX_Extent"`
	TimePeriod *TimePeriod `xml:"TimePeriod"`
}

type Exterior struct {
	Ring Ring `xml:"Ring"`
}

type FeatureLifetime struct {
	TimePeriod TimePeriod `xml:"TimePeriod"`
}

type FieldElevation struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type FieldElevationAccuracy struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type Frangible struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type Frequency struct {
	Nil       bool    `xml:"nil,attr"`
	NilReason *string `xml:"nilReason,attr"`
	UOM       string  `xml:"uom,attr"`
	CharData  string  `xml:",chardata"`
}

type GeoBorder struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type GeoBorderTimeSlice struct {
	ID               string    `xml:"id,attr"`
	Border           Border    `xml:"border"`
	CorrectionNumber bool      `xml:"correctionNumber"`
	Interpretation   string    `xml:"interpretation"`
	Name             string    `xml:"name"`
	SequenceNumber   string    `xml:"sequenceNumber"`
	Type             Type      `xml:"type"`
	ValidTime        ValidTime `xml:"validTime"`
}

type GeodesicString struct {
	Interpolation *string `xml:"interpolation,attr"`
	PosList       PosList `xml:"posList"`
}

type GeographicElement struct {
	EXGeographicDescription EXGeographicDescription `xml:"EX_GeographicDescription"`
}

type GeographicIdentifier struct {
	MDIdentifier MDIdentifier `xml:"MD_Identifier"`
}

type GeoidUndulation struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type GeometryComponent struct {
	AirspaceGeometryComponent AirspaceGeometryComponent `xml:"AirspaceGeometryComponent"`
}

type GhostFrequency struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type HasMember struct {
	AirportHeliport           *AirportHeliport           `xml:"AirportHeliport"`
	Airspace                  *Airspace                  `xml:"Airspace"`
	DME                       *DME                       `xml:"DME"`
	DesignatedPoint           *DesignatedPoint           `xml:"DesignatedPoint"`
	GeoBorder                 *GeoBorder                 `xml:"GeoBorder"`
	NDB                       *NDB                       `xml:"NDB"`
	Navaid                    *Navaid                    `xml:"Navaid"`
	ObstacleArea              *ObstacleArea              `xml:"ObstacleArea"`
	OrganisationAuthority     *OrganisationAuthority     `xml:"OrganisationAuthority"`
	Runway                    *Runway                    `xml:"Runway"`
	RunwayCentrelinePoint     *RunwayCentrelinePoint     `xml:"RunwayCentrelinePoint"`
	RunwayDirection           *RunwayDirection           `xml:"RunwayDirection"`
	TACAN                     *TACAN                     `xml:"TACAN"`
	VOR                       *VOR                       `xml:"VOR"`
	VerticalStructure         *VerticalStructure         `xml:"VerticalStructure"`
	VisualGlideSlopeIndicator *VisualGlideSlopeIndicator `xml:"VisualGlideSlopeIndicator"`
}

type HorizontalAccuracy struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type HorizontalProjection struct {
	Surface Surface `xml:"Surface"`
}

type HorizontalProjectionLinearExtent struct {
	ElevatedCurve ElevatedCurve `xml:"ElevatedCurve"`
}

type HorizontalProjectionLocation struct {
	ElevatedPoint ElevatedPoint `xml:"ElevatedPoint"`
}

type HorizontalProjectionSurfaceExtent struct {
	ElevatedSurface ElevatedSurface `xml:"ElevatedSurface"`
}

type IdentificationInfo struct {
	MDDataIdentification MDDataIdentification `xml:"MD_DataIdentification"`
}

type Identifier struct {
	CodeSpace string `xml:"codeSpace,attr"`
	CharData  string `xml:",chardata"`
}

type Language struct {
	LanguageCode LanguageCode `xml:"LanguageCode"`
}

type LanguageCode struct {
	CodeList      string `xml:"codeList,attr"`
	CodeListValue string `xml:"codeListValue,attr"`
}

type LengthAccuracy struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type LengthStrip struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type LightElement struct {
	ID   string `xml:"id,attr"`
	Type Type   `xml:"type"`
}

type Lighting struct {
	LightElement LightElement `xml:"LightElement"`
}

type LightingICAOStandard struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type LinguisticNote struct {
	ID        string    `xml:"id,attr"`
	NoteLower NoteLower `xml:"note"`
}

type Location struct {
	ElevatedPoint *ElevatedPoint `xml:"ElevatedPoint"`
	Point         Point          `xml:"Point"`
}

type LowerLimit struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type MDConstraints struct {
	UseLimitation UseLimitation `xml:"useLimitation"`
}

type MDDataIdentification struct {
	Abstract            Abstract            `xml:"abstract"`
	Citation            Citation            `xml:"citation"`
	Extent              []Extent            `xml:"extent"`
	Language            Language            `xml:"language"`
	PointOfContact      PointOfContact      `xml:"pointOfContact"`
	ResourceConstraints ResourceConstraints `xml:"resourceConstraints"`
	TopicCategory       TopicCategory       `xml:"topicCategory"`
}

type MDIdentifier struct {
	Code Code `xml:"code"`
}

type MDMetadata struct {
	Contact            Contact            `xml:"contact"`
	DataSetURI         DataSetURI         `xml:"dataSetURI"`
	DateStamp          DateStamp          `xml:"dateStamp"`
	IdentificationInfo IdentificationInfo `xml:"identificationInfo"`
}

type MagneticVariationAccuracy struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
}

type MagneticVariationChange struct {
	Nil       bool   `xml:"nil,attr"`
	NilReason string `xml:"nilReason,attr"`
	CharData  string `xml:",chardata"`
}

type MarkingFirstColour struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type MarkingICAOStandard struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type MarkingPattern struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type MarkingSecondColour struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type MaximumLimit struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type MessageMetadata struct {
	MDMetadata MDMetadata `xml:"MD_Metadata"`
}

type Military struct {
	Nil bool `xml:"nil,attr"`
}

type MinimumEyeHeightOverThreshold struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type MinimumLimit struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type Mobile struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type NDB struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type NDBTimeSlice struct {
	ID               string     `xml:"id,attr"`
	Authority        Authority  `xml:"authority"`
	Class            Class      `xml:"class"`
	CorrectionNumber bool       `xml:"correctionNumber"`
	Designator       Designator `xml:"designator"`
	Frequency        Frequency  `xml:"frequency"`
	Interpretation   string     `xml:"interpretation"`
	Location         Location   `xml:"location"`
	Name             *string    `xml:"name"`
	SequenceNumber   string     `xml:"sequenceNumber"`
	ValidTime        ValidTime  `xml:"validTime"`
}

type Navaid struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type NavaidComponent struct {
	ID                        string             `xml:"id,attr"`
	CollocationGroup          *bool              `xml:"collocationGroup"`
	ProvidesNavigableLocation string             `xml:"providesNavigableLocation"`
	TheNavaidEquipment        TheNavaidEquipment `xml:"theNavaidEquipment"`
}

type NavaidEquipment struct {
	NavaidComponent NavaidComponent `xml:"NavaidComponent"`
}

type NavaidOperationalStatus struct {
	ID                string       `xml:"id,attr"`
	OperationalStatus string       `xml:"operationalStatus"`
	TimeInterval      TimeInterval `xml:"timeInterval"`
}

type NavaidTimeSlice struct {
	ID               string            `xml:"id,attr"`
	Availability     Availability      `xml:"availability"`
	CorrectionNumber bool              `xml:"correctionNumber"`
	Designator       Designator        `xml:"designator"`
	Interpretation   string            `xml:"interpretation"`
	Location         Location          `xml:"location"`
	Name             *string           `xml:"name"`
	NavaidEquipment  []NavaidEquipment `xml:"navaidEquipment"`
	SequenceNumber   string            `xml:"sequenceNumber"`
	Type             Type              `xml:"type"`
	ValidTime        ValidTime         `xml:"validTime"`
}

type NominalLength struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type NominalWidth struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type Note struct {
	ID             string           `xml:"id,attr"`
	PropertyName   *string          `xml:"propertyName"`
	Purpose        string           `xml:"purpose"`
	TranslatedNote []TranslatedNote `xml:"translatedNote"`
}

type NoteLower struct {
	Lang     *string `xml:"lang,attr"`
	CharData string  `xml:",chardata"`
}

type Obstacle struct {
	Href  string `xml:"href,attr"`
	Title string `xml:"title,attr"`
}

type ObstacleArea struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type ObstacleAreaTimeSlice struct {
	ID                         string                     `xml:"id,attr"`
	CorrectionNumber           bool                       `xml:"correctionNumber"`
	FeatureLifetime            FeatureLifetime            `xml:"featureLifetime"`
	Interpretation             string                     `xml:"interpretation"`
	Obstacle                   []Obstacle                 `xml:"obstacle"`
	ReferenceOwnerOrganisation ReferenceOwnerOrganisation `xml:"reference_ownerOrganisation"`
	SequenceNumber             string                     `xml:"sequenceNumber"`
	Type                       Type                       `xml:"type"`
	ValidTime                  ValidTime                  `xml:"validTime"`
}

type OnRunway struct {
	Href string `xml:"href,attr"`
}

type OrganisationAuthority struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type OrganisationAuthorityTimeSlice struct {
	ID               string          `xml:"id,attr"`
	CorrectionNumber bool            `xml:"correctionNumber"`
	Designator       Designator      `xml:"designator"`
	FeatureLifetime  FeatureLifetime `xml:"featureLifetime"`
	Interpretation   string          `xml:"interpretation"`
	Military         Military        `xml:"military"`
	Name             string          `xml:"name"`
	SequenceNumber   string          `xml:"sequenceNumber"`
	Type             Type            `xml:"type"`
	ValidTime        ValidTime       `xml:"validTime"`
}

type OrganisationName struct {
	CharacterString string `xml:"CharacterString"`
}

type Part struct {
	VerticalStructurePart VerticalStructurePart `xml:"VerticalStructurePart"`
}

type Patches struct {
	PolygonPatch PolygonPatch `xml:"PolygonPatch"`
}

type Point struct {
	ID      string `xml:"id,attr"`
	SrsName string `xml:"srsName,attr"`
	Pos     string `xml:"pos"`
}

type PointOfContact struct {
	CIResponsibleParty CIResponsibleParty `xml:"CI_ResponsibleParty"`
}

type PolygonPatch struct {
	Exterior Exterior `xml:"exterior"`
}

type PosList struct {
	SrsName  *string `xml:"srsName,attr"`
	CharData string  `xml:",chardata"`
}

type Radius struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type ReferenceOwnerOrganisation struct {
	Href  string `xml:"href,attr"`
	Title string `xml:"title,attr"`
}

type ReferenceTemperature struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type ResourceConstraints struct {
	MDConstraints MDConstraints `xml:"MD_Constraints"`
}

type ResponsibleOrganisation struct {
	AirportHeliportResponsibilityOrganisation AirportHeliportResponsibilityOrganisation `xml:"AirportHeliportResponsibilityOrganisation"`
}

type Ring struct {
	CurveMember []CurveMember `xml:"curveMember"`
}

type Role struct {
	CharData   string     `xml:",chardata"`
	CIRoleCode CIRoleCode `xml:"CI_RoleCode"`
}

type Runway struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type RunwayCentrelinePoint struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type RunwayCentrelinePointTimeSlice struct {
	ID                         string                       `xml:"id,attr"`
	AssociatedDeclaredDistance []AssociatedDeclaredDistance `xml:"associatedDeclaredDistance"`
	CorrectionNumber           bool                         `xml:"correctionNumber"`
	Designator                 Designator                   `xml:"designator"`
	Interpretation             string                       `xml:"interpretation"`
	Location                   Location                     `xml:"location"`
	OnRunway                   OnRunway                     `xml:"onRunway"`
	Role                       *Role                        `xml:"role"`
	SequenceNumber             string                       `xml:"sequenceNumber"`
	ValidTime                  ValidTime                    `xml:"validTime"`
}

type RunwayDeclaredDistance struct {
	ID            string        `xml:"id,attr"`
	DeclaredValue DeclaredValue `xml:"declaredValue"`
	Type          Type          `xml:"type"`
}

type RunwayDeclaredDistanceValue struct {
	ID               string           `xml:"id,attr"`
	Distance         Distance         `xml:"distance"`
	DistanceAccuracy DistanceAccuracy `xml:"distanceAccuracy"`
}

type RunwayDirection struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type RunwayDirectionLower struct {
	Href string `xml:"href,attr"`
}

type RunwayDirectionTimeSlice struct {
	ID                   string                `xml:"id,attr"`
	CorrectionNumber     bool                  `xml:"correctionNumber"`
	Designator           Designator            `xml:"designator"`
	ElevationTDZ         *ElevationTDZ         `xml:"elevationTDZ"`
	ElevationTDZAccuracy *ElevationTDZAccuracy `xml:"elevationTDZAccuracy"`
	Interpretation       string                `xml:"interpretation"`
	MagneticBearing      *float64              `xml:"magneticBearing"`
	SequenceNumber       string                `xml:"sequenceNumber"`
	TrueBearing          TrueBearing           `xml:"trueBearing"`
	TrueBearingAccuracy  TrueBearingAccuracy   `xml:"trueBearingAccuracy"`
	UsedRunway           UsedRunway            `xml:"usedRunway"`
	ValidTime            ValidTime             `xml:"validTime"`
}

type RunwayTimeSlice struct {
	ID                        string                    `xml:"id,attr"`
	AssociatedAirportHeliport AssociatedAirportHeliport `xml:"associatedAirportHeliport"`
	CorrectionNumber          bool                      `xml:"correctionNumber"`
	Designator                Designator                `xml:"designator"`
	Interpretation            string                    `xml:"interpretation"`
	LengthAccuracy            LengthAccuracy            `xml:"lengthAccuracy"`
	LengthStrip               *LengthStrip              `xml:"lengthStrip"`
	NominalLength             NominalLength             `xml:"nominalLength"`
	NominalWidth              NominalWidth              `xml:"nominalWidth"`
	SequenceNumber            string                    `xml:"sequenceNumber"`
	SurfaceProperties         SurfaceProperties         `xml:"surfaceProperties"`
	Type                      Type                      `xml:"type"`
	ValidTime                 ValidTime                 `xml:"validTime"`
	WidthAccuracy             WidthAccuracy             `xml:"widthAccuracy"`
	WidthStrip                *WidthStrip               `xml:"widthStrip"`
}

type Segments struct {
	ArcByCenterPoint    []ArcByCenterPoint   `xml:"ArcByCenterPoint"`
	CircleByCenterPoint *CircleByCenterPoint `xml:"CircleByCenterPoint"`
	GeodesicString      []GeodesicString     `xml:"GeodesicString"`
}

type ServedCity struct {
	City City `xml:"City"`
}

type StartAngle struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type Surface struct {
	ID      string  `xml:"id,attr"`
	SrsName string  `xml:"srsName,attr"`
	Patches Patches `xml:"patches"`
}

type SurfaceCharacteristics struct {
	ID                  string  `xml:"id,attr"`
	ClassPCN            *int    `xml:"classPCN"`
	Composition         string  `xml:"composition"`
	EvaluationMethodPCN *string `xml:"evaluationMethodPCN"`
	MaxTyrePressurePCN  *string `xml:"maxTyrePressurePCN"`
	PavementSubgradePCN *string `xml:"pavementSubgradePCN"`
	PavementTypePCN     *string `xml:"pavementTypePCN"`
}

type SurfaceProperties struct {
	SurfaceCharacteristics SurfaceCharacteristics `xml:"SurfaceCharacteristics"`
}

type SynchronisedLighting struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type TACAN struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type TACANTimeSlice struct {
	ID               string     `xml:"id,attr"`
	Authority        Authority  `xml:"authority"`
	Channel          string     `xml:"channel"`
	CorrectionNumber bool       `xml:"correctionNumber"`
	Designator       Designator `xml:"designator"`
	Interpretation   string     `xml:"interpretation"`
	Location         Location   `xml:"location"`
	Name             *string    `xml:"name"`
	SequenceNumber   string     `xml:"sequenceNumber"`
	ValidTime        ValidTime  `xml:"validTime"`
}

type TemporalElement struct {
	EXTemporalExtent EXTemporalExtent `xml:"EX_TemporalExtent"`
}

type TheAirspaceVolume struct {
	AirspaceVolume AirspaceVolume `xml:"AirspaceVolume"`
}

type TheNavaidEquipment struct {
	Href string `xml:"href,attr"`
}

type TheOrganisationAuthority struct {
	Href string `xml:"href,attr"`
}

type TimeInterval struct {
	Timesheet Timesheet `xml:"Timesheet"`
}

type TimePeriod struct {
	ID            string        `xml:"id,attr"`
	BeginPosition BeginPosition `xml:"beginPosition"`
	EndPosition   EndPosition   `xml:"endPosition"`
}

type TimeSlice struct {
	AirportHeliportTimeSlice           *AirportHeliportTimeSlice           `xml:"AirportHeliportTimeSlice"`
	AirspaceTimeSlice                  *AirspaceTimeSlice                  `xml:"AirspaceTimeSlice"`
	DMETimeSlice                       *DMETimeSlice                       `xml:"DMETimeSlice"`
	DesignatedPointTimeSlice           *DesignatedPointTimeSlice           `xml:"DesignatedPointTimeSlice"`
	GeoBorderTimeSlice                 *GeoBorderTimeSlice                 `xml:"GeoBorderTimeSlice"`
	NDBTimeSlice                       *NDBTimeSlice                       `xml:"NDBTimeSlice"`
	NavaidTimeSlice                    *NavaidTimeSlice                    `xml:"NavaidTimeSlice"`
	ObstacleAreaTimeSlice              *ObstacleAreaTimeSlice              `xml:"ObstacleAreaTimeSlice"`
	OrganisationAuthorityTimeSlice     *OrganisationAuthorityTimeSlice     `xml:"OrganisationAuthorityTimeSlice"`
	RunwayCentrelinePointTimeSlice     *RunwayCentrelinePointTimeSlice     `xml:"RunwayCentrelinePointTimeSlice"`
	RunwayDirectionTimeSlice           *RunwayDirectionTimeSlice           `xml:"RunwayDirectionTimeSlice"`
	RunwayTimeSlice                    *RunwayTimeSlice                    `xml:"RunwayTimeSlice"`
	TACANTimeSlice                     *TACANTimeSlice                     `xml:"TACANTimeSlice"`
	VORTimeSlice                       *VORTimeSlice                       `xml:"VORTimeSlice"`
	VerticalStructureTimeSlice         *VerticalStructureTimeSlice         `xml:"VerticalStructureTimeSlice"`
	VisualGlideSlopeIndicatorTimeSlice *VisualGlideSlopeIndicatorTimeSlice `xml:"VisualGlideSlopeIndicatorTimeSlice"`
}

type Timesheet struct {
	ID string `xml:"id,attr"`
}

type Title struct {
	CharacterString string `xml:"CharacterString"`
}

type TopicCategory struct {
	MDTopicCategoryCode string `xml:"MD_TopicCategoryCode"`
}

type TransitionAltitude struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type TranslatedNote struct {
	LinguisticNote LinguisticNote `xml:"LinguisticNote"`
}

type TrueBearing struct {
	Nil       *bool   `xml:"nil,attr"`
	NilReason *string `xml:"nilReason,attr"`
	CharData  string  `xml:",chardata"`
}

type TrueBearingAccuracy struct {
	Nil       *bool   `xml:"nil,attr"`
	NilReason *string `xml:"nilReason,attr"`
	CharData  string  `xml:",chardata"`
}

type Type struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type UpperLimit struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type UseLimitation struct {
	CharacterString string `xml:"CharacterString"`
}

type UsedRunway struct {
	Href string `xml:"href,attr"`
}

type VOR struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type VORTimeSlice struct {
	ID                   string     `xml:"id,attr"`
	Authority            Authority  `xml:"authority"`
	CorrectionNumber     bool       `xml:"correctionNumber"`
	Designator           Designator `xml:"designator"`
	Frequency            Frequency  `xml:"frequency"`
	Interpretation       string     `xml:"interpretation"`
	Location             Location   `xml:"location"`
	Name                 *string    `xml:"name"`
	SequenceNumber       string     `xml:"sequenceNumber"`
	Type                 Type       `xml:"type"`
	ValidTime            ValidTime  `xml:"validTime"`
	ZeroBearingDirection string     `xml:"zeroBearingDirection"`
}

type ValidTime struct {
	TimePeriod TimePeriod `xml:"TimePeriod"`
}

type VerticalAccuracy struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type VerticalExtent struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type VerticalExtentAccuracy struct {
	Nil      *bool   `xml:"nil,attr"`
	UOM      *string `xml:"uom,attr"`
	CharData string  `xml:",chardata"`
}

type VerticalStructure struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type VerticalStructurePart struct {
	ID                                string                             `xml:"id,attr"`
	ConstructionStatus                ConstructionStatus                 `xml:"constructionStatus"`
	Designator                        Designator                         `xml:"designator"`
	Frangible                         Frangible                          `xml:"frangible"`
	HorizontalProjectionLinearExtent  *HorizontalProjectionLinearExtent  `xml:"horizontalProjection_linearExtent"`
	HorizontalProjectionLocation      *HorizontalProjectionLocation      `xml:"horizontalProjection_location"`
	HorizontalProjectionSurfaceExtent *HorizontalProjectionSurfaceExtent `xml:"horizontalProjection_surfaceExtent"`
	Lighting                          *Lighting                          `xml:"lighting"`
	MarkingFirstColour                MarkingFirstColour                 `xml:"markingFirstColour"`
	MarkingPattern                    MarkingPattern                     `xml:"markingPattern"`
	MarkingSecondColour               MarkingSecondColour                `xml:"markingSecondColour"`
	Mobile                            Mobile                             `xml:"mobile"`
	Type                              Type                               `xml:"type"`
	VerticalExtent                    VerticalExtent                     `xml:"verticalExtent"`
	VerticalExtentAccuracy            VerticalExtentAccuracy             `xml:"verticalExtentAccuracy"`
	VisibleMaterial                   VisibleMaterial                    `xml:"visibleMaterial"`
}

type VerticalStructureTimeSlice struct {
	ID                   string               `xml:"id,attr"`
	Annotation           []Annotation         `xml:"annotation"`
	CorrectionNumber     bool                 `xml:"correctionNumber"`
	FeatureLifetime      FeatureLifetime      `xml:"featureLifetime"`
	Group                string               `xml:"group"`
	Interpretation       string               `xml:"interpretation"`
	Lighted              string               `xml:"lighted"`
	LightingICAOStandard LightingICAOStandard `xml:"lightingICAOStandard"`
	MarkingICAOStandard  MarkingICAOStandard  `xml:"markingICAOStandard"`
	Name                 string               `xml:"name"`
	Part                 []Part               `xml:"part"`
	SequenceNumber       string               `xml:"sequenceNumber"`
	SynchronisedLighting SynchronisedLighting `xml:"synchronisedLighting"`
	Type                 Type                 `xml:"type"`
	ValidTime            ValidTime            `xml:"validTime"`
}

type VisibleMaterial struct {
	Nil      *bool  `xml:"nil,attr"`
	CharData string `xml:",chardata"`
}

type VisualGlideSlopeIndicator struct {
	ID         string     `xml:"id,attr"`
	Identifier Identifier `xml:"identifier"`
	TimeSlice  TimeSlice  `xml:"timeSlice"`
}

type VisualGlideSlopeIndicatorTimeSlice struct {
	ID                            string                         `xml:"id,attr"`
	CorrectionNumber              bool                           `xml:"correctionNumber"`
	Interpretation                string                         `xml:"interpretation"`
	MinimumEyeHeightOverThreshold *MinimumEyeHeightOverThreshold `xml:"minimumEyeHeightOverThreshold"`
	Position                      *string                        `xml:"position"`
	RunwayDirectionLower          RunwayDirectionLower           `xml:"runwayDirection"`
	SequenceNumber                string                         `xml:"sequenceNumber"`
	SlopeAngle                    float64                        `xml:"slopeAngle"`
	Type                          Type                           `xml:"type"`
	ValidTime                     ValidTime                      `xml:"validTime"`
}

type WidthAccuracy struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}

type WidthStrip struct {
	UOM      string `xml:"uom,attr"`
	CharData string `xml:",chardata"`
}
